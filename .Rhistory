Data11_HealthMeds <- rbind(kData11_HealthMeds, oData11_HealthMeds)	%>% mutate_if(is.character, as.factor) %>%
mutate(VISIT = recode(VISIT, `1` = "Outdoor", `10` = "Indoor"))
#### Dataset 12 Health History: Self ####
kData12_HistorySelf <- kPMdataLAB %>%
select( VISIT,SID,
HEALTH_GENERAL, HISTORY_ER, CVD, CVD_MEDICATION, CVD_MED_ANTIPLATELET,
CVD_MED_ANTICOAG, CVD_MED_ACEINHIBITORS, CVD_MED_LOSARTAN, CVD_MED_BETABLOCKERS, CVD_MED_CACHBLOCKERS, CVD_MED_STATIN,
CVD_MED_DIURETICS, CVD_MED_VASODILATORS, CVD_MED_OTHER, CVD_MED_DK, CVD_MED_REFUSED, CVD_MED_OTHERSP, KIDNEY_STONES, UTI,
GOUT, GOUT_MEDICATION, GOUT_MED_ALLOPURINOL, GOUT_MED_INDOMETHACIN, GOUT_MED_CORTOCOSTEROIDS, GOUT_MED_OTHER, GOUT_MED_DK,
GOUT_MED_REFUSED, GOUT_MED_OTHERSP
)
oData12_HistorySelf <- oPMdataLAB %>%
select( VISIT,SID,
HEALTH_GENERAL, HISTORY_ER, CVD, CVD_MEDICATION, CVD_MED_ANTIPLATELET,
CVD_MED_ANTICOAG, CVD_MED_ACEINHIBITORS, CVD_MED_LOSARTAN, CVD_MED_BETABLOCKERS, CVD_MED_CACHBLOCKERS, CVD_MED_STATIN,
CVD_MED_DIURETICS, CVD_MED_VASODILATORS, CVD_MED_OTHER, CVD_MED_DK, CVD_MED_REFUSED, CVD_MED_OTHERSP, KIDNEY_STONES, UTI,
GOUT, GOUT_MEDICATION, GOUT_MED_ALLOPURINOL, GOUT_MED_INDOMETHACIN, GOUT_MED_CORTOCOSTEROIDS, GOUT_MED_OTHER, GOUT_MED_DK,
GOUT_MED_REFUSED, GOUT_MED_OTHERSP
)
Data12_HistorySelf <- rbind(kData12_HistorySelf, oData12_HistorySelf)%>%
mutate(VISIT = recode(VISIT, `1` = "Outdoor", `10` = "Indoor"))
#### Dataset 13 Health History: Family ####
kData13_HistoryFam <- kPMdataLAB %>%
select( VISIT,SID,
FAMILY_HYPERTENSION, FAMILY_CVD, FAMILY_STROKE, FAMILY_DIABETES_TYPE2, FAMILY_KIDNEY_STONES, FAMILY_KIDNEY_DISEASE,
FAMILY_UTI, FAMILY_GOUT, FAMILY_CANCER
)
oData13_HistoryFam <- oPMdataLAB %>%
select( VISIT,SID,
FAMILY_HYPERTENSION, FAMILY_CVD, FAMILY_STROKE, FAMILY_DIABETES_TYPE2, FAMILY_KIDNEY_STONES, FAMILY_KIDNEY_DISEASE,
FAMILY_UTI, FAMILY_GOUT, FAMILY_CANCER
)
Data13_HistoryFam <- rbind(kData13_HistoryFam, oData13_HistoryFam)		%>%
mutate(VISIT = recode(VISIT, `1` = "Outdoor", `10` = "Indoor"))
#### Dataset 14 Work Type in last 6 months ####
kData14_Type <- kPMdataLAB %>%
select( VISIT,SID,
JOBS_6M_FERNERY, JOBS_6M_NURSERY, JOBS_6M_FV, JOBS_6M_YARDWORK, JOBS_6M_OTHERAG, JOBS_6M_HOUSECLEANING,
JOBS_6M_CHILDCARE, JOBS_6M_OFFICE, JOBS_6M_RETAIL, JOBS_6M_RESTAURANT, JOBS_6M_PACKINGWAIR, JOBS_6M_PACKINGNOAIR,
JOBS_6M_CONSTRUCTION, JOBS_6M_PAINTING, JOBS_6M_UNEMPLOYED, JOBS_6M_OTHERNONAG, JOBS_6M_AGRI_OTHERSP,
JOBS_6M_NOAGRI_OTHERSP, WORK_GT50_AGRI, DAYS_WEEK_AGRI, HOURS_DAY_AGRI, PAYMENT_AGRI, PAYMENT_AGRI_OTHERSP,
DAYS_WEEK_NONAGRI, HOURS_DAY_NONAGRI, PAYMENT_NONAGRI, PAYMENT_NONAGRI_OTHERSP
)
oData14_Type <- oPMdataLAB %>%
select( VISIT,SID,
JOBS_6M_FERNERY, JOBS_6M_NURSERY, JOBS_6M_FV, JOBS_6M_YARDWORK, JOBS_6M_OTHERAG, JOBS_6M_HOUSECLEANING,
JOBS_6M_CHILDCARE, JOBS_6M_OFFICE, JOBS_6M_RETAIL, JOBS_6M_RESTAURANT, JOBS_6M_PACKINGWAIR, JOBS_6M_PACKINGNOAIR,
JOBS_6M_CONSTRUCTION, JOBS_6M_PAINTING, JOBS_6M_UNEMPLOYED, JOBS_6M_OTHERNONAG, JOBS_6M_AGRI_OTHERSP,
JOBS_6M_NOAGRI_OTHERSP, WORK_GT50_AGRI, DAYS_WEEK_AGRI, HOURS_DAY_AGRI, PAYMENT_AGRI, PAYMENT_AGRI_OTHERSP,
DAYS_WEEK_NONAGRI, HOURS_DAY_NONAGRI, PAYMENT_NONAGRI, PAYMENT_NONAGRI_OTHERSP
)
Data14_Type <- rbind(kData14_Type, oData14_Type)%>%
mutate(VISIT = recode(VISIT, `1` = "Outdoor", `10` = "Indoor"))
#### Dataset 15 Issues ####
kData15_Issues <- k23issues %>%
select( VISIT,
TIME_OF_DAY, ATTENDANCE, DATA_ISSUES, DATA_ISSUE_ZEPHYR, DATA_ISSUE_IBUTTON, DATA_ISSUE_URINE_CLINIC, DATA_ISSUE_BLOOD_CLINIC,
DATA_ISSUE_URINE_LAB, DATA_ISSUE_BLOOD_LAB, DATA_ISSUE_OTHER, DATA_ISSUE_NONE, DATA_ISSUE_TYPE_OTHERSP, ZEPHYR_ISSUE,
ZEPHYR_ISSUE_OTHERSP, WAISTIBUTTON_ISSUE, WAISTIBUTTON_ISSUE_OTHERSP, URINE_ISSUE_CLINICAL, URINE_ISSUE_CLINICAL_OTHERSP,
URINE_ISSUE_LAB, URINE_ISSUE_LAB_OTHERSP, URINE_ISSUE_LAB_TOOLITTLE, BLOOD_ISSUE_CLINICAL, BLOOD_ISSUE_OTHERSP, BLOOD_ISSUE_LAB,
BLOOD_ISSUE_LAB_TOOLITTLE, BLOOD_ISSUE_LAB_OTHERSP, ATTENDANCE_YES_OTHERSP
)
oData15_Issues <- oheardissues %>%
select( VISIT,
TIME_OF_DAY, ATTENDANCE, DATA_ISSUES, DATA_ISSUE_ZEPHYR, DATA_ISSUE_IBUTTON, DATA_ISSUE_URINE_CLINIC, DATA_ISSUE_BLOOD_CLINIC,
DATA_ISSUE_URINE_LAB, DATA_ISSUE_BLOOD_LAB, DATA_ISSUE_OTHER, DATA_ISSUE_NONE, DATA_ISSUE_TYPE_OTHERSP, ZEPHYR_ISSUE,
ZEPHYR_ISSUE_OTHERSP, WAISTIBUTTON_ISSUE, WAISTIBUTTON_ISSUE_OTHERSP, URINE_ISSUE_CLINICAL, URINE_ISSUE_CLINICAL_OTHERSP,
URINE_ISSUE_LAB, URINE_ISSUE_LAB_OTHERSP, URINE_ISSUE_LAB_TOOLITTLE, BLOOD_ISSUE_CLINICAL, BLOOD_ISSUE_OTHERSP, BLOOD_ISSUE_LAB,
BLOOD_ISSUE_LAB_TOOLITTLE, BLOOD_ISSUE_LAB_OTHERSP, ATTENDANCE_YES_OTHERSP
)
Data15_Issues <- rbind(kData15_Issues, oData15_Issues)%>%
mutate(VISIT = recode(VISIT, `1` = "Outdoor", `10` = "Indoor"))
MASTER <- Data1_Demog %>%
full_join(Data2_BaseClin, by = c("VISIT", "SID")) %>%
full_join(Data3_URINE, by = c("VISIT", "SID")) %>%
full_join(Data4_AKI, by = c("VISIT", "SID"))  %>%
full_join(Data5_SERUM, by = c("VISIT", "SID")) %>%
full_join(Data6_WorkdayBev, by = c("VISIT", "SID"))  %>%
full_join(Data7_WorkdayType, by = c("VISIT", "SID"))  %>%
full_join(Data8_HRI, by = c("VISIT", "SID"))  %>%
full_join(Data9_GenWork, by = c("VISIT", "SID"))  %>%
full_join(Data10_GenDrink, by = c("VISIT", "SID"))   %>%
full_join(Data11_HealthMeds, by = c("VISIT", "SID")) %>%
full_join(Data12_HistorySelf, by = c("VISIT", "SID")) %>%
full_join(Data13_HistoryFam, by = c("VISIT", "SID")) %>%
full_join(Data14_Type, by = c("VISIT", "SID"))
# numeric_x <- k23data[sapply(k23data, is.numeric)]
# numeric_x <- numeric_x %>% select_if(~any(!is.na(.)))
# pca = prcomp(numeric_x, center = TRUE, scale. = F)
# plot(pca$sdev^2,type='b')
# mcar_test(numeric_x)
# mcar_test(Data1_Demog)
# mcar_test(Data2_BaseClin)
# mcar_test(Data3_URINE)
# mcar_test(Data5_SERUM)
# mcar_test(Data6_WorkdayBev)
#
#
# res.famd <- FAMD(k23data, graph = FALSE)
# SID, AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS,
CONFOUNDERS <- MASTER %>%
select(SID, AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BP_5CAT_BL, WORK_DURATION_HRS, NEW_HR_MEDIAN, AKI_YN, EGFR_PM, EGFR_DIFF, SYMPSUM_TODAY, URINE_SG_pm, VISIT)
CONFOUNDERSNUM <- MASTER %>%
select(AGE, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BFAT, BP_SYSTOLIC_BL, BP_DIASTOLIC_BL, CHOLESTEROL, WORK_DURATION_HRS, NEW_HR_MEDIAN)
corrplot(cor(CONFOUNDERSNUM, method = "pearson", use = "complete.obs"), type = "upper")
corrplot(cor(CONFOUNDERSNUM, method = "pearson", use = "complete.obs"), type = "upper")
CONFOUNDERSNUM <- MASTER %>%
select(AGE, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BFAT, BP_SYSTOLIC_BL, BP_DIASTOLIC_BL, CHOLESTEROL, WORK_DURATION_HRS, NEW_HR_MEDIAN)
library(corrplot)
corrplot(cor(CONFOUNDERSNUM, method = "pearson", use = "complete.obs"), type = "upper")
q3_1 <- glmnet(CONFOUNDERS, MASTER$EGFR_PM, alpha = 1)
mcar_test(CONFOUNDERS)
library(VIM)
aggr_plot <- aggr(CONFOUNDERS, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(CONFOUNDERS), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
View(CONFOUNDERS)
modelFit1 <- with(imputed_data,lm(EGFR_DIFF ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT))
imputed_data <- mice(CONFOUNDERS,m = 5, maxit = 50, seed = 500)
library(mice)
imputed_data <- mice(CONFOUNDERS,m = 5, maxit = 50, seed = 500)
modelFit1 <- with(imputed_data,lm(EGFR_DIFF ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT))
summary(pool(modelFit1))
modelFit1 <- with(imputed_data,lm(EGFR_DIFF ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT))
summary(pool(modelFit1))
modelFit1 <- with(imputed_data,lm(URINE_SG_pm ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT))
summary(pool(modelFit1))
model <- lm(EGFR_DIFF ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, data = CONFOUNDERS)
vif_values <- vif(model)
library(car)
model <- lm(EGFR_DIFF ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, data = CONFOUNDERS)
vif_values <- vif(model)
vif_table <- data.frame(Variable = names(vif_values), VIF = vif_values)
vif_values
library(car)
model <- lm(EGFR_DIFF ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, data = CONFOUNDERS)
vif_values <- vif(model)
vif_values
library(dplyr)
MODELVARS <- MASTER %>%
select(SID, AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BP_5CAT_BL, WORK_DURATION_HRS, NEW_HR_MEDIAN, AKI_YN, EGFR_PM, EGFR_DIFF, SYMPSUM_TODAY, URINE_SG_pm, VISIT)
# impute a missing value specific to this dataset
MODELVARS$EDUCATION2[is.na(MODELVARS$EDUCATION2)] <- "<12 years"
NUMERIC_MODELVARS <- MASTER %>%
select(AGE, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BFAT, BP_SYSTOLIC_BL, BP_DIASTOLIC_BL, CHOLESTEROL, WORK_DURATION_HRS, NEW_HR_MEDIAN)
# Looking at correlaations
res2 <- rcorr(as.matrix(NUMERIC_MODELVARS))
library(corrplot)
library(car)
library(VIM)
library(mice)
library(Hmisc)
library(PerformanceAnalytics)
library(naniar)
library(glmnet)
MODELVARS <- MASTER %>%
select(SID, AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BP_5CAT_BL, WORK_DURATION_HRS, NEW_HR_MEDIAN, AKI_YN, EGFR_PM, EGFR_DIFF, SYMPSUM_TODAY, URINE_SG_pm, VISIT)
# impute a missing value specific to this dataset
MODELVARS$EDUCATION2[is.na(MODELVARS$EDUCATION2)] <- "<12 years"
NUMERIC_MODELVARS <- MASTER %>%
select(AGE, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BFAT, BP_SYSTOLIC_BL, BP_DIASTOLIC_BL, CHOLESTEROL, WORK_DURATION_HRS, NEW_HR_MEDIAN)
# Looking at correlaations
res2 <- rcorr(as.matrix(NUMERIC_MODELVARS))
res2
corrplot(res2$r, type="upper", order="hclust")
chart.Correlation(NUMERIC_MODELVARS, histogram=TRUE, pch=19)
# MCAR test
mcar_test(MODELVARS)
aggr_plot <- aggr(MODELVARS, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(MODELVARS), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
plot(model1)
vif(model1)
model1 <- glm(AKI_YN ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, data = MODELVARS, family="binomial")
vif(model1)
plot(model1)
model2 <- lm(EGFR_PM ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, data = MODELVARS)
vif(model2)
plot(model2)
model3 <- lm(EGFR_DIFF ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, data = MODELVARS)
vif(model3)
plot(model3)
model4 <- lm(URINE_SG_pm ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, data = MODELVARS)
vif(model4)
plot(model4)
model5 <- lm(SYMPSUM_TODAY ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, data = MODELVARS)
vif(model5)
plot(model5)
# MCAR test
mcar_test(MODELVARS)
aggr_plot <- aggr(MODELVARS, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(MODELVARS), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
plot(model2)
plot(model3)
summary(imputed_data)
# impute missing values
imputed_data <- mice(MODELVARS,m = 5, maxit = 50, seed = 500)
summary(imputed_data)
densityplot(imputed_data)
# imputed for all models
xyplot(imputed_data, AKI_YN ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, pch=18,cex=1)
xyplot(imputed_data, EGFR_PM ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, pch=18,cex=1)
xyplot(imputed_data, EGFR_DIFF ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, pch=18,cex=1)
xyplot(imputed_data, URINE_SG_pm ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, pch=18,cex=1)
xyplot(imputed_data, SYMPSUM_TODAY ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, pch=18,cex=1)
completedData1 <- complete(imputed_data,1)
preds1 <- completedData1 %>%
select(AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BP_5CAT_BL, WORK_DURATION_HRS, NEW_HR_MEDIAN, VISIT)
completedData2 <- complete(imputed_data,2)
preds2 <- completedData2 %>%
select(AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BP_5CAT_BL, WORK_DURATION_HRS, NEW_HR_MEDIAN, VISIT)
completedData3 <- complete(imputed_data,3)
preds3 <- completedData3 %>%
select(AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BP_5CAT_BL, WORK_DURATION_HRS, NEW_HR_MEDIAN, VISIT)
completedData4 <- complete(imputed_data,4)
preds4<-completedData4 %>%
select(AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BP_5CAT_BL, WORK_DURATION_HRS, NEW_HR_MEDIAN, VISIT)
completedData5 <- complete(imputed_data,5)
preds5 <- completedData5%>%
select(AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BP_5CAT_BL, WORK_DURATION_HRS, NEW_HR_MEDIAN, VISIT)
# LASSO FOR MODEL 1 on all five imputed datasets
num_datasets <- 5
for (i in 1:num_datasets) {
# Dynamically create variable names
preds_name <- paste0("preds", i)
data_name <- paste0("completedData", i)
# Access the variables dynamically
preds <- get(preds_name)
data <- get(data_name)
# Fit the lasso model
lasso <- glmnet(as.matrix(preds), data$AKI_YN, family = "binomial", alpha = 1)
plot(lasso)
# Perform cross-validation
cv <- cv.glmnet(as.matrix(preds), data$AKI_YN, family = "binomial", alpha = 1)
plot(cv)
# Extract coefficients at lambda.min
lasso.estimates <- coef(cv, s = cv$lambda.min)
# Extract variables selected by lasso
selected_variables <- which(abs(lasso.estimates[-1,]) != 0)
x_selected <- preds[, selected_variables]
# Fit logistic regression model using selected variables
regression <- glm(data$AKI_YN ~ ., data = as.data.frame(x_selected), family = "binomial")
# Print summary of the regression model
print(paste0("Results for dataset ", i, ":"))
print(summary(regression))
print(vif(regression))
}
# LASSO FOR MODEL 2 on all five imputed datasets
num_datasets <- 5
for (i in 1:num_datasets) {
# Dynamically create variable names
preds_name <- paste0("preds", i)
data_name <- paste0("completedData", i)
# Access the variables dynamically
preds <- get(preds_name)
data <- get(data_name)
# Fit the lasso model
lasso <- glmnet(as.matrix(preds), data$EGFR_PM, alpha = 1)
plot(lasso)
# Perform cross-validation
cv <- cv.glmnet(as.matrix(preds), data$EGFR_PM, alpha = 1)
plot(cv)
# Extract coefficients at lambda.min
lasso.estimates <- coef(cv, s = cv$lambda.min)
# Extract variables selected by lasso
selected_variables <- which(abs(lasso.estimates[-1,]) != 0)
x_selected <- preds[, selected_variables]
# Fit regression model using selected variables
regression <- glm(data$EGFR_PM ~ ., data = as.data.frame(x_selected))
# Print summary of the regression model
print(paste0("Results for dataset ", i, ":"))
print(summary(regression))
print(vif(regression))
}
# LASSO FOR MODEL 3 on all five imputed datasets
num_datasets <- 5
for (i in 1:num_datasets) {
# Dynamically create variable names
preds_name <- paste0("preds", i)
data_name <- paste0("completedData", i)
# Access the variables dynamically
preds <- get(preds_name)
data <- get(data_name)
# Fit the lasso model
lasso <- glmnet(as.matrix(preds), data$EGFR_DIFF, alpha = 1)
plot(lasso)
# Perform cross-validation
cv <- cv.glmnet(as.matrix(preds), data$EGFR_DIFF, alpha = 1)
plot(cv)
# Extract coefficients at lambda.min
lasso.estimates <- coef(cv, s = cv$lambda.min)
# Extract variables selected by lasso
selected_variables <- which(abs(lasso.estimates[-1,]) != 0)
x_selected <- preds[, selected_variables]
# Fit regression model using selected variables
regression <- glm(data$EGFR_DIFF ~ ., data = as.data.frame(x_selected))
# Print summary of the regression model
print(paste0("Results for dataset ", i, ":"))
print(summary(regression))
print(vif(regression))
}
corrplot(res2$r, type="upper", order="hclust")
chart.Correlation(NUMERIC_MODELVARS, histogram=TRUE, pch=19)
vif(model2)
temp <- lm(EGFR_DIFF ~ AGE + VISIT)
temp <- lm(EGFR_DIFF ~ AGE + VISIT, data=MODELVARS)
plot(temp)
temp <- lm(EGFR_PM ~ VISIT, data=MODELVARS)
summary(temp)
plot(temp)
install.packages("config")
config::get()
a <- 1
b <- 2
d <- "foo"
e <- "bar"
paste0(d, a, e, b)
a <- list(hello = "foo", world = "bar")
paste0(a, collapse = "_")
a <- list(hello = "foo", world = "bar")
paste0(a$hello, "_", a$world)
names <- list("Lincoln", "Grant", "Theodore")
ages <- c(4, 2, 0)
paste0(names, ages)
names <- list("Lincoln", "Grant", "Theodore")
ages <- c(4, 2, 0)
paste0(names, ages, collapse = "/")
params <- list(
ab = c("vrc01", "pgt122"),
cutpoint = c(0, 1)
)
paste0(
"ab_", params$ab[1], "_",
"cut_", params$cutpoint[1], ".rds"
)
View(oData7_WorkdayType)
View(oData11_HealthMeds)
View(Data11_HealthMeds)
View(kData11_HealthMeds)
View(Data12_HistorySelf)
View(Data13_HistoryFam)
View(Data14_Type)
setwd("C:\\Git\\DATA-550-SP24-GROUP6")
here::i_am(
#! TO DO: add appropriate location
"code/02_making_tables.R"
)
library(dplyr)
library(psych)
data <- readRDS(
file = here::here("data/data_clean.rds")
)
# Summary statistics for each variable
describe(data)
eda <- describe(data)
saveRDS(
eda,
file =
here::here("output/table_eda.rds")
)
# 2*2 table for sex and dead
data$died <- factor(data$died, levels = c(0, 1), labels = c("Not Dead", "Dead"))
table_sex_died <- table(data$sex, data$died)
print(table_sex_died)
table_sex_died <- addmargins(table_sex_died)
saveRDS(
table_sex_died,
file =
here::here("output/table_sex_died.rds")
)
# Relationship between pneumonia and mortality
table_pneumonia_died <- table(data$pneumonia, data$died)
saveRDS(
table_pneumonia_died,
file =
here::here("output/table_pneumonia_died.rds")
)
# Relationship between diabetes and mortality
table_diabetes_died <- table(data$diabetes, data$died)
saveRDS(
table_diabetes_died,
file =
here::here("output/table_diabetes_died.rds")
)
table_sex_died
table_pneumonia_died
table_diabetes_died
eda
here::i_am("code/03_making_plots.R")
clean_data <- readRDS(
file = here::here ("data","data_clean.rds")
)
library(ggplot2)
library(tidyr)
library(dplyr)
#creating dataframes for each condition by patient type (hospitalized vs return home) for Medical History & Respiratory Health Models
#Dataframes for Model 1 Plots- Medical History
obesity_hospital <- clean_data %>%
filter(obesity== "Yes", patient_type=="hospitalization") %>%
summarize(condition = "obesity", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
obesity_home <- clean_data %>%
filter(obesity== "Yes", patient_type=="returned home") %>%
summarize(condition = "obesity", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
diabetes_hosiptal <- clean_data %>%
filter(diabetes== "Yes", patient_type=="hospitalization") %>%
summarize(condition = "diabetes", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
diabetes_home <- clean_data %>%
filter(diabetes== "Yes", patient_type=="returned home") %>%
summarize(condition = "diabetes", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
inmsupr_hospital <- clean_data %>%
filter(inmsupr== "Yes", patient_type=="hospitalization") %>%
summarize(condition = "inmsupr", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
inmsupr_home <- clean_data %>%
filter(inmsupr== "Yes", patient_type=="returned home") %>%
summarize(condition = "inmsupr", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
hipertension_hospital <- clean_data %>%
filter(hipertension== "Yes", patient_type=="hospitalization") %>%
summarize(condition = "hipertension", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
hipertension_home <- clean_data %>%
filter(hipertension== "Yes", patient_type=="returned home") %>%
summarize(condition = "hipertension", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
cardiovascular_hospital <- clean_data %>%
filter(cardiovascular== "Yes", patient_type=="hospitalization") %>%
summarize(condition = "cardiovascular", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
cardiovascular_home <- clean_data %>%
filter(cardiovascular== "Yes", patient_type=="returned home") %>%
summarize(condition = "cardiovascular", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
#Dataframes for Model 2 Plots- Respiratory Health
pneumonia_hospital <- clean_data %>%
filter(pneumonia== "Yes", patient_type=="hospitalization") %>%
summarize(condition = "pneumonia", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
pneumonia_home <- clean_data %>%
filter(pneumonia== "Yes", patient_type=="returned home") %>%
summarize(condition = "pneumonia", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
tobacco_hospital <- clean_data %>%
filter(tobacco== "Yes", patient_type=="hospitalization") %>%
summarize(condition = "tobacco", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
tobacco_home <- clean_data %>%
filter(tobacco== "Yes", patient_type=="returned home") %>%
summarize(condition = "tobacco", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
asthma_hospital <- clean_data %>%
filter(asthma== "Yes", patient_type=="hospitalization") %>%
summarize(condition = "asthma", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
asthma_home <- clean_data %>%
filter(asthma== "Yes", patient_type=="returned home") %>%
summarize(condition = "asthma", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
copd_hospital <- clean_data %>%
filter(copd== "Yes", patient_type=="hospitalization") %>%
summarize(condition = "copd", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
copd_home <- clean_data %>%
filter(copd== "Yes", patient_type=="returned home") %>%
summarize(condition = "copd", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
intubed_hospital <- clean_data %>%
filter(intubed== "Yes", patient_type=="hospitalization") %>%
summarize(condition = "intubed", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
intubed_home <- clean_data %>%
filter(intubed== "Yes", patient_type=="returned home") %>%
summarize(condition = "intubed", n1 = sum(classification_new==1), n0 = sum(classification_new==0))
#Plots for Medical History: Hospitalized vs Returned Home
#Hospitalized
hospitalized_medical_history <- rbind(obesity_hospital, diabetes_hosiptal,inmsupr_hospital,
hipertension_hospital, cardiovascular_hospital) %>%
pivot_longer(cols=c(n1, n0), names_to = "classification_new", values_to = "n")
#creating custom labels for plots
custom_label <- c("Negative", "Positive")
custom_label_cond1 <- c("Cardiovascular", "Diabetes", "Hypertension", "Immunosuppressed", "Obesity")
custom_label_cond2 <- c("Asthma", "COPD", "Intubated", "Pneumonia", "Tobacco User")
MH_hospitalized <- ggplot(hospitalized_medical_history, aes(x=condition, y=n, fill=classification_new)) +
geom_bar(stat="identity", position="stack")+
scale_x_discrete(labels = custom_label_cond1)+
labs(fill = "Covid-19 Status")+
scale_fill_manual(values = c("blue", "red"), labels= custom_label)+
xlab('Pre-conditions') +
ylab ("Count") +
ggtitle("Medical History and Covid-19 Status for Hospitalized Patients")
ggsave(here::here("output", "Medical_History_hospitalized.png"), MH_hospitalized, width = 7.5, height = 4, dpi = 300)
#sent home
home_medical_history <- rbind(obesity_home, diabetes_home, inmsupr_home,
hipertension_home, cardiovascular_home) %>%
pivot_longer(cols=c(n1, n0), names_to = "classification_new", values_to = "n")
MH_home <- ggplot(home_medical_history, aes(x=condition, y=n, fill=classification_new)) +
geom_bar(stat="identity", position="stack")+
scale_x_discrete(labels = custom_label_cond1)+
labs(fill = "Covid-19 Status")+
scale_fill_manual(values = c("blue", "red"), labels= custom_label)+
xlab('Pre-conditions') +
ylab ("Count") +
ggtitle("Medical History and Covid-19 Status for Patients Sent Home")
ggsave(here::here("output", "Medical_History_home.png"), MH_home, width = 7.5, height = 4, dpi = 300)
#plots for respiratory health: hospitalized vs return home
# hospitalized
hospitalized_respiratory_health <- rbind(pneumonia_hospital, tobacco_hospital, asthma_hospital,
copd_hospital, intubed_hospital) %>%
pivot_longer(cols=c(n1, n0), names_to = "classification_new", values_to = "n")
RH_hospitalized <- ggplot(hospitalized_respiratory_health, aes(x=condition, y=n, fill=classification_new)) +
geom_bar(stat="identity", position="stack")+
scale_x_discrete(labels = custom_label_cond2)+
labs(fill = "Covid-19 Status")+
scale_fill_manual(values = c("blue", "red"), labels= custom_label)+
xlab('Pre-conditions') +
ylab ("Count") +
ggtitle("Respiratory Health and Covid-19 Status of Hospitalized Patients")
ggsave(here::here("output", "Respiratory_Health_hospitalized.png"), RH_hospitalized, width = 7.5, height = 4, dpi = 300)
#home
home_respiratory_health <- rbind(pneumonia_home, tobacco_home, asthma_home,
copd_home, intubed_home) %>%
pivot_longer(cols=c(n1, n0), names_to = "classification_new", values_to = "n")
RH_home <- ggplot(home_respiratory_health, aes(x=condition, y=n, fill=classification_new)) +
geom_bar(stat="identity", position="stack")+
scale_x_discrete(labels = custom_label_cond2)+
labs(fill = "Covid-19 Status")+
scale_fill_manual(values = c("blue", "red"), labels= custom_label)+
xlab('Pre-conditions') +
ylab ("Count") +
ggtitle("Respiratory Health and Covid-19 Status for Patients Sent Home")
ggsave(here::here("output", "Respiratory_Health_home.png"), RH_home, width = 7.5, height = 4, dpi = 300)
install.packages("pandoc")
