full_join(Data13_HistoryFam, by = c("VISIT", "SID")) %>%
full_join(Data14_Type, by = c("VISIT", "SID"))
# numeric_x <- k23data[sapply(k23data, is.numeric)]
# numeric_x <- numeric_x %>% select_if(~any(!is.na(.)))
# pca = prcomp(numeric_x, center = TRUE, scale. = F)
# plot(pca$sdev^2,type='b')
# mcar_test(numeric_x)
# mcar_test(Data1_Demog)
# mcar_test(Data2_BaseClin)
# mcar_test(Data3_URINE)
# mcar_test(Data5_SERUM)
# mcar_test(Data6_WorkdayBev)
#
#
# res.famd <- FAMD(k23data, graph = FALSE)
# SID, AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS,
CONFOUNDERS <- MASTER %>%
select(SID, AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BP_5CAT_BL, WORK_DURATION_HRS, NEW_HR_MEDIAN, AKI_YN, EGFR_PM, EGFR_DIFF, SYMPSUM_TODAY, URINE_SG_pm, VISIT)
CONFOUNDERSNUM <- MASTER %>%
select(AGE, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BFAT, BP_SYSTOLIC_BL, BP_DIASTOLIC_BL, CHOLESTEROL, WORK_DURATION_HRS, NEW_HR_MEDIAN)
corrplot(cor(CONFOUNDERSNUM, method = "pearson", use = "complete.obs"), type = "upper")
corrplot(cor(CONFOUNDERSNUM, method = "pearson", use = "complete.obs"), type = "upper")
CONFOUNDERSNUM <- MASTER %>%
select(AGE, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BFAT, BP_SYSTOLIC_BL, BP_DIASTOLIC_BL, CHOLESTEROL, WORK_DURATION_HRS, NEW_HR_MEDIAN)
library(corrplot)
corrplot(cor(CONFOUNDERSNUM, method = "pearson", use = "complete.obs"), type = "upper")
q3_1 <- glmnet(CONFOUNDERS, MASTER$EGFR_PM, alpha = 1)
mcar_test(CONFOUNDERS)
library(VIM)
aggr_plot <- aggr(CONFOUNDERS, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(CONFOUNDERS), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
View(CONFOUNDERS)
modelFit1 <- with(imputed_data,lm(EGFR_DIFF ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT))
imputed_data <- mice(CONFOUNDERS,m = 5, maxit = 50, seed = 500)
library(mice)
imputed_data <- mice(CONFOUNDERS,m = 5, maxit = 50, seed = 500)
modelFit1 <- with(imputed_data,lm(EGFR_DIFF ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT))
summary(pool(modelFit1))
modelFit1 <- with(imputed_data,lm(EGFR_DIFF ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT))
summary(pool(modelFit1))
modelFit1 <- with(imputed_data,lm(URINE_SG_pm ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT))
summary(pool(modelFit1))
model <- lm(EGFR_DIFF ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, data = CONFOUNDERS)
vif_values <- vif(model)
library(car)
model <- lm(EGFR_DIFF ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, data = CONFOUNDERS)
vif_values <- vif(model)
vif_table <- data.frame(Variable = names(vif_values), VIF = vif_values)
vif_values
library(car)
model <- lm(EGFR_DIFF ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, data = CONFOUNDERS)
vif_values <- vif(model)
vif_values
library(dplyr)
MODELVARS <- MASTER %>%
select(SID, AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BP_5CAT_BL, WORK_DURATION_HRS, NEW_HR_MEDIAN, AKI_YN, EGFR_PM, EGFR_DIFF, SYMPSUM_TODAY, URINE_SG_pm, VISIT)
# impute a missing value specific to this dataset
MODELVARS$EDUCATION2[is.na(MODELVARS$EDUCATION2)] <- "<12 years"
NUMERIC_MODELVARS <- MASTER %>%
select(AGE, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BFAT, BP_SYSTOLIC_BL, BP_DIASTOLIC_BL, CHOLESTEROL, WORK_DURATION_HRS, NEW_HR_MEDIAN)
# Looking at correlaations
res2 <- rcorr(as.matrix(NUMERIC_MODELVARS))
library(corrplot)
library(car)
library(VIM)
library(mice)
library(Hmisc)
library(PerformanceAnalytics)
library(naniar)
library(glmnet)
MODELVARS <- MASTER %>%
select(SID, AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BP_5CAT_BL, WORK_DURATION_HRS, NEW_HR_MEDIAN, AKI_YN, EGFR_PM, EGFR_DIFF, SYMPSUM_TODAY, URINE_SG_pm, VISIT)
# impute a missing value specific to this dataset
MODELVARS$EDUCATION2[is.na(MODELVARS$EDUCATION2)] <- "<12 years"
NUMERIC_MODELVARS <- MASTER %>%
select(AGE, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BFAT, BP_SYSTOLIC_BL, BP_DIASTOLIC_BL, CHOLESTEROL, WORK_DURATION_HRS, NEW_HR_MEDIAN)
# Looking at correlaations
res2 <- rcorr(as.matrix(NUMERIC_MODELVARS))
res2
corrplot(res2$r, type="upper", order="hclust")
chart.Correlation(NUMERIC_MODELVARS, histogram=TRUE, pch=19)
# MCAR test
mcar_test(MODELVARS)
aggr_plot <- aggr(MODELVARS, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(MODELVARS), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
plot(model1)
vif(model1)
model1 <- glm(AKI_YN ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, data = MODELVARS, family="binomial")
vif(model1)
plot(model1)
model2 <- lm(EGFR_PM ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, data = MODELVARS)
vif(model2)
plot(model2)
model3 <- lm(EGFR_DIFF ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, data = MODELVARS)
vif(model3)
plot(model3)
model4 <- lm(URINE_SG_pm ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, data = MODELVARS)
vif(model4)
plot(model4)
model5 <- lm(SYMPSUM_TODAY ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, data = MODELVARS)
vif(model5)
plot(model5)
# MCAR test
mcar_test(MODELVARS)
aggr_plot <- aggr(MODELVARS, col=c('navyblue','red'), numbers=TRUE, sortVars=TRUE, labels=names(MODELVARS), cex.axis=.7, gap=3, ylab=c("Histogram of missing data","Pattern"))
plot(model2)
plot(model3)
summary(imputed_data)
# impute missing values
imputed_data <- mice(MODELVARS,m = 5, maxit = 50, seed = 500)
summary(imputed_data)
densityplot(imputed_data)
# imputed for all models
xyplot(imputed_data, AKI_YN ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, pch=18,cex=1)
xyplot(imputed_data, EGFR_PM ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, pch=18,cex=1)
xyplot(imputed_data, EGFR_DIFF ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, pch=18,cex=1)
xyplot(imputed_data, URINE_SG_pm ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, pch=18,cex=1)
xyplot(imputed_data, SYMPSUM_TODAY ~ AGE+ SEX+ MARITAL_STATUS+EDUCATION2+NATIONALITY+INDIGENOUS+AGRI_START+AGRI_YRS_IN_SOUTH+ BMI+BP_5CAT_BL+WORK_DURATION_HRS+ NEW_HR_MEDIAN + VISIT, pch=18,cex=1)
completedData1 <- complete(imputed_data,1)
preds1 <- completedData1 %>%
select(AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BP_5CAT_BL, WORK_DURATION_HRS, NEW_HR_MEDIAN, VISIT)
completedData2 <- complete(imputed_data,2)
preds2 <- completedData2 %>%
select(AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BP_5CAT_BL, WORK_DURATION_HRS, NEW_HR_MEDIAN, VISIT)
completedData3 <- complete(imputed_data,3)
preds3 <- completedData3 %>%
select(AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BP_5CAT_BL, WORK_DURATION_HRS, NEW_HR_MEDIAN, VISIT)
completedData4 <- complete(imputed_data,4)
preds4<-completedData4 %>%
select(AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BP_5CAT_BL, WORK_DURATION_HRS, NEW_HR_MEDIAN, VISIT)
completedData5 <- complete(imputed_data,5)
preds5 <- completedData5%>%
select(AGE, SEX, MARITAL_STATUS, EDUCATION2, NATIONALITY, INDIGENOUS, AGRI_START, AGRI_YRS_IN_SOUTH, BMI, BP_5CAT_BL, WORK_DURATION_HRS, NEW_HR_MEDIAN, VISIT)
# LASSO FOR MODEL 1 on all five imputed datasets
num_datasets <- 5
for (i in 1:num_datasets) {
# Dynamically create variable names
preds_name <- paste0("preds", i)
data_name <- paste0("completedData", i)
# Access the variables dynamically
preds <- get(preds_name)
data <- get(data_name)
# Fit the lasso model
lasso <- glmnet(as.matrix(preds), data$AKI_YN, family = "binomial", alpha = 1)
plot(lasso)
# Perform cross-validation
cv <- cv.glmnet(as.matrix(preds), data$AKI_YN, family = "binomial", alpha = 1)
plot(cv)
# Extract coefficients at lambda.min
lasso.estimates <- coef(cv, s = cv$lambda.min)
# Extract variables selected by lasso
selected_variables <- which(abs(lasso.estimates[-1,]) != 0)
x_selected <- preds[, selected_variables]
# Fit logistic regression model using selected variables
regression <- glm(data$AKI_YN ~ ., data = as.data.frame(x_selected), family = "binomial")
# Print summary of the regression model
print(paste0("Results for dataset ", i, ":"))
print(summary(regression))
print(vif(regression))
}
# LASSO FOR MODEL 2 on all five imputed datasets
num_datasets <- 5
for (i in 1:num_datasets) {
# Dynamically create variable names
preds_name <- paste0("preds", i)
data_name <- paste0("completedData", i)
# Access the variables dynamically
preds <- get(preds_name)
data <- get(data_name)
# Fit the lasso model
lasso <- glmnet(as.matrix(preds), data$EGFR_PM, alpha = 1)
plot(lasso)
# Perform cross-validation
cv <- cv.glmnet(as.matrix(preds), data$EGFR_PM, alpha = 1)
plot(cv)
# Extract coefficients at lambda.min
lasso.estimates <- coef(cv, s = cv$lambda.min)
# Extract variables selected by lasso
selected_variables <- which(abs(lasso.estimates[-1,]) != 0)
x_selected <- preds[, selected_variables]
# Fit regression model using selected variables
regression <- glm(data$EGFR_PM ~ ., data = as.data.frame(x_selected))
# Print summary of the regression model
print(paste0("Results for dataset ", i, ":"))
print(summary(regression))
print(vif(regression))
}
# LASSO FOR MODEL 3 on all five imputed datasets
num_datasets <- 5
for (i in 1:num_datasets) {
# Dynamically create variable names
preds_name <- paste0("preds", i)
data_name <- paste0("completedData", i)
# Access the variables dynamically
preds <- get(preds_name)
data <- get(data_name)
# Fit the lasso model
lasso <- glmnet(as.matrix(preds), data$EGFR_DIFF, alpha = 1)
plot(lasso)
# Perform cross-validation
cv <- cv.glmnet(as.matrix(preds), data$EGFR_DIFF, alpha = 1)
plot(cv)
# Extract coefficients at lambda.min
lasso.estimates <- coef(cv, s = cv$lambda.min)
# Extract variables selected by lasso
selected_variables <- which(abs(lasso.estimates[-1,]) != 0)
x_selected <- preds[, selected_variables]
# Fit regression model using selected variables
regression <- glm(data$EGFR_DIFF ~ ., data = as.data.frame(x_selected))
# Print summary of the regression model
print(paste0("Results for dataset ", i, ":"))
print(summary(regression))
print(vif(regression))
}
corrplot(res2$r, type="upper", order="hclust")
chart.Correlation(NUMERIC_MODELVARS, histogram=TRUE, pch=19)
vif(model2)
temp <- lm(EGFR_DIFF ~ AGE + VISIT)
temp <- lm(EGFR_DIFF ~ AGE + VISIT, data=MODELVARS)
plot(temp)
temp <- lm(EGFR_PM ~ VISIT, data=MODELVARS)
summary(temp)
plot(temp)
install.packages("config")
config::get()
a <- 1
b <- 2
d <- "foo"
e <- "bar"
paste0(d, a, e, b)
a <- list(hello = "foo", world = "bar")
paste0(a, collapse = "_")
a <- list(hello = "foo", world = "bar")
paste0(a$hello, "_", a$world)
names <- list("Lincoln", "Grant", "Theodore")
ages <- c(4, 2, 0)
paste0(names, ages)
names <- list("Lincoln", "Grant", "Theodore")
ages <- c(4, 2, 0)
paste0(names, ages, collapse = "/")
params <- list(
ab = c("vrc01", "pgt122"),
cutpoint = c(0, 1)
)
paste0(
"ab_", params$ab[1], "_",
"cut_", params$cutpoint[1], ".rds"
)
View(oData7_WorkdayType)
View(oData11_HealthMeds)
View(Data11_HealthMeds)
View(kData11_HealthMeds)
View(Data12_HistorySelf)
View(Data13_HistoryFam)
View(Data14_Type)
setwd("C:\\Git\\DATA-550-SP24-ZHUANG")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
here::i_am("final_report.Rmd")
#### Packages ####
# Load required packages
required_packages <- c(
"tidyverse", "gtsummary", "haven", "flextable", "labelled", "naniar", "pcaMethods", "ISLR", "pls", "glmnet", "FactoMineR", "factoextra", "ggplot2"
)
# Check and load required packages
for (pkg in required_packages) {
if (!requireNamespace(pkg, quietly = TRUE)) {
install.packages(pkg)
}
library(pkg, character.only = TRUE)
}
table1 <- readRDS(
file = here::here("output/table1.rds")
)
table1
# gtsummary::modify_caption("Table 1. Demographic Characteristics of Indoor and Outdoor Agricultural Workers") %>%
# gtsummary::modify_spanning_header(c("stat_1", "stat_2") ~ "Agricultural Group") %>%
# gtsummary::bold_labels() %>%
# gtsummary::add_p()
here::i_am("code/02_make_tables_and_figures.R")
# List of packages
required_packages <- c(
"gtsummary", "haven", "flextable", "labelled", "tidyverse", "dplyr"
)
# Check and load required packages
for (pkg in required_packages) {
if (!requireNamespace(pkg, quietly = TRUE)) {
install.packages(pkg)
}
library(pkg, character.only = TRUE)
}
# List of datasets and their corresponding file names
datasets <- list(Data1_Demog = "Data1_Demog", Data2_BaseClin = "Data2_BaseClin")
# Loop through the list and load each dataset
for (name in names(datasets)) {
# Construct the file path
file_path <- here::here("derived_data", paste0(datasets[[name]], ".rds"))
# Read the RDS file
dataset <- readRDS(file = file_path)
# Dynamically assign the dataset to a variable with the name specified in 'names(datasets)'
assign(x = name, value = dataset, envir = .GlobalEnv)
}
#### Making Table 1. Demographics ####
table1 <- gtsummary::tbl_summary(
Data1_Demog %>% select(-SID),
by = VISIT,
digits 	= list(all_categorical() ~ 0,	all_continuous() ~ 0),
type = list(AGRI_YRS_IN_SOUTH ~ 'continuous'),
statistic = list(	all_continuous() ~ "{median} ({p25}, {p75})",
all_categorical() ~ "{p}% ({n})",
missing = "no"
),
value = list(
SEX ~ "Male",
MARITAL_STATUS ~"Coupled",
INDIGENOUS ~ "Yes",
LANGUAGE_ENGLISH ~ "Checked",
LANGUAGE_SPANISH ~ "Checked"),
label = list(
SEX~"Male",
MARITAL_STATUS~"Married/Coupled",
EDUCATION2~"Education (Years)",
INDIGENOUS~"Indigenous",
LANGUAGE_ENGLISH~"Speaks English",
LANGUAGE_SPANISH~"Speaks Spanish",
AGRI_START~"Age Started Agricultural Work",
AGRI_YRS_IN_SOUTH~"Years in Southern Agriculture")
) %>%
gtsummary::modify_caption("Table 1. Demographic Characteristics of Indoor and Outdoor Agricultural Workers") %>%
gtsummary::modify_spanning_header(c("stat_1", "stat_2") ~ "Agricultural Group") %>%
gtsummary::bold_labels() %>%
gtsummary::add_p()
saveRDS(
table1,
file = here::here("output/table1.rds")
)
table1 <- readRDS(
file = here::here("output/table1.rds")
)
table1
knitr::include_graphics(
here::here("output/figure.png")
)
here::i_am("code/03_render_report.R")
rmarkdown::render(
here::here("final_report.Rmd"),
knit_root_dir = here::here()
)
setwd("C:\\Git\\DATA-550-SP24-ZHUANG")
here::i_am("code/00_import_data.R")
# List of packages
required_packages <- c(
"gtsummary", "haven", "flextable", "labelled", "naniar", "pcaMethods", "ISLR", "pls", "glmnet",
"FactoMineR", "factoextra", "car", "corrplot", "VIM", "mice",  "quantreg", "lqr","lqmm","broom", "ordinal","tidyverse", "dplyr"
)
# Check and load required packages
for (pkg in required_packages) {
if (!requireNamespace(pkg, quietly = TRUE)) {
install.packages(pkg)
}
library(pkg, character.only = TRUE)
}
#### Import data ####
# Define a function to read SAS files more concisely
read_sas_with_format <- function(file_name) {
absolute_path_to_datasets <- here::here("datasets")
read_sas(paste0(absolute_path_to_datasets, "/", file_name, ".sas7bdat"),
paste0(absolute_path_to_datasets, "/formats.sas7bcat"))
}
# Import K23 data
k23data <- read_sas_with_format("k23data")
k23issues <- read_sas_with_format("k23issues")
k23households <- read_sas_with_format("k23households")
k23dataLAB <- k23data %>% haven::as_factor() %>% labelled::to_factor()
# K23 AUGUST data, not complete
# k23augdata <- read_sas(paste0(sas_file_path, ""), paste0(sas_file_path, "formats.sas7bcat"))
# k23augdataLAB <- k23augdata %>% haven::as_factor() %>% labelled::to_factor()
# Import OHEaRD data
oheard <- read_sas_with_format("ohearddata") %>% filter(VISIT == 1, LOCATION == 2)
oheardissues <- read_sas_with_format("oheardissues") %>% filter(VISIT == 1) %>%
filter(SID %in% oheard$SID)
oheardhouseholds <- read_sas_with_format("oheardhouseholds")
oheardLAB <- oheard %>% haven::as_factor() %>% labelled::to_factor()
#### Pre-Process Data ####
# Define a function to process issues datasets
process_issues <- function(data) {
data %>%
as_factor() %>%
to_factor() %>%
rename_with(toupper) %>%
mutate(TIME_OF_DAY = replace(TIME_OF_DAY, TIME_OF_DAY == "", "BLday"))
}
# Apply the function to datasets
k23issues <- process_issues(k23issues)
oheardissues <- process_issues(oheardissues)
# Define a function for creating PM and AM datasets and processing them
create_time_subset <- function(data, time_of_day, additional_processing = NULL) {
subsetted_data <- subset(data, TIME_OF_DAY %in% time_of_day)
if (!is.null(additional_processing)) {
subsetted_data <- additional_processing(subsetted_data)
}
subsetted_data %>%
as_factor() %>%
to_factor()
}
# Additional processing for PM data
process_PM_data <- function(data) {
data %>%
mutate(EDUCATION2 = ifelse(EDUCATIONN >= 12, ">= 12 years", "<12 years"),
BMI = round(BMI, 2))
}
# Create PM and AM datasets
kPMdataLAB <- create_time_subset(k23data, c("pm", ""), process_PM_data)
oPMdataLAB <- create_time_subset(oheard, c("pm", ""), process_PM_data)
kAMdataLAB <- create_time_subset(k23data, "am")
oAMdataLAB <- create_time_subset(oheard, "am")
#### SAVE THE DATA ####
# List of datasets and their corresponding file names
datasets <- list(kPMdataLAB = "kPMdataLAB", oPMdataLAB = "oPMdataLAB")
# Loop through the list and save each dataset
for (name in names(datasets)) {
saveRDS(get(name), file = here::here(paste0("derived_data/", datasets[[name]], ".rds")))
}
Sys.getenv("RSTUDIO_PANDOC")
# Situate yourself
here::i_am("code/04_making_models.R")
# Situate yourself
here::i_am("code/04_making_models.R")
install.packages("car")
setwd("/c/Git/Data-550-sp24-group6")
setwd("c:/Git/Data-550-sp24-group6")
renv::status()
renv::snapshot()
renv::status()
renv::status()
renv::restore()
renv::restore()
library(car)
# Situate yourself
here::i_am("code/04_making_models.R")
# Read in clean data
data <- readRDS(
file = here::here("data/data_clean.rds")
)
# Load Libraries
library(gtsummary)
library(tidyverse)
library(labelled)
library(car)
# Subset Data to only include patients that are hospitalized
data_hosp <- data %>% filter(patient_type=="hospitalization")
# Add labels back to data
var_label(data_hosp) <- list(
id = "ID",
usmer = "Medical Unit of Levels 1, 2, or 3",
medical_unit = "Medical Unit",
sex = "Sex",
patient_type = "Type of Care Received",
date_died = " Date of Death",
intubed = "Connected to Ventilator",
pneumonia = "Pneumonia",
age = "Age (Years)",
pregnant = "Pregnant",
diabetes = "Diabetes",
copd = "COPD",
asthma = "Asthma",
inmsupr = "Immunosuppressed",
hipertension = "Hypertension",
other_disease = "Other Disease",
cardiovascular = "Cardiovascular Disease",
obesity = "Obesity",
renal_chronic = "Chronic Renal Disease",
tobacco = "Tobacco User",
classification_new = "COVID Diagnosis",
icu = "Admitted to ICU",
clasiffication_final = "COVID Test Findings",
died = "Died"
)
# Create a model based on patient respiratory health for patients hospitalized
respiratory_model_hosp <- glm(classification_new ~ pneumonia + tobacco + asthma + copd + intubed,
family = "binomial", data = data_hosp)
# Create a model based on patient medical history and demographics
patient_hx_model_hosp <- glm(classification_new ~ sex + age + obesity + diabetes + inmsupr + renal_chronic + other_disease +
hipertension + cardiovascular,
family = "binomial", data = data_hosp)
# Put Patient Respiratory Health Model in a Table
respiratory_regression_table <-
tbl_regression(respiratory_model_hosp) |>
add_global_p() |>
bold_labels()
# Put Patient Medical History Model in a Table
patient_hx_regression_table <-
tbl_regression(patient_hx_model_hosp) |>
add_global_p() |>
bold_labels()
# Put both models objects in a list
both_models <- list(
First = respiratory_model_hosp,
Second = patient_hx_model_hosp
)
# Save the model list to output folder
saveRDS(
both_models,
file = here::here("output/both_models.rds")
)
# Put both regression table objects in a list
both_regression_tables <- list(
First = respiratory_regression_table,
Second = patient_hx_regression_table
)
# Save the regression table list to output folder
saveRDS(
both_regression_tables,
file = here::here("output/both_regression_tables.rds")
)
